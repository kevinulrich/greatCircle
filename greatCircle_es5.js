"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function t(t,e){for(var a=0;a<e.length;a++){var i=e[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,a,i){return a&&t(e.prototype,a),i&&t(e,i),e}}(),greatCircle=function(){function t(e){_classCallCheck(this,t),"object"!=typeof e&&(e={}),this.sort=t._getValidSort(e.sort),this.limit=t._getValidLimit(e.sort)}return _createClass(t,[{key:"calc",value:function(e){if("object"!=typeof e.from||"undefined"==typeof e.from.lat||"undefined"==typeof e.from.lon)throw"greatCircle: From needs to be an object with at least lat and lon";if("object"!=typeof e.to)throw"greatCircle: To needs to be an object with at least lat and lon";var a="undefined"!=typeof e.sort?t._getValidSort(e.sort):this.sort,i="undefined"!=typeof e.limit?t._getValidLimit(e.limit):this.limit,n=t._getValidPoint(e.from),r=t._getValidPointList(e.to),o=t._getDistanceList(n,r);return a!==!1&&(o=t._sortDistanceList(o,a)),i!==!1&&(o=t._limitDistanceList(o,i)),o}}],[{key:"getDistanceBetween",value:function(e,a){e=t._getValidPoint(e),a=t._getValidPoint(a);var i=t.floatToRadians(e.lat),n=t.floatToRadians(a.lat),r=t.floatToRadians(a.lat-e.lat),o=t.floatToRadians(a.lon-e.lon),l=Math.sin(r/2)*Math.sin(r/2)+Math.cos(i)*Math.cos(n)*Math.sin(o/2)*Math.sin(o/2),s=2*Math.atan2(Math.sqrt(l),Math.sqrt(1-l));return parseInt(t.earthRadius*s)}},{key:"_limitDistanceList",value:function(e,a){if(a=t._getValidLimit(a),a===!1)return[];var i=[];for(var n in e){if(n==a)break;i.push(e[n])}return i}},{key:"_sortDistanceList",value:function(e,a){if(a=t._getValidSort(a),"asc"!=a&&"desc"!=a)return e;for(var i=[];e.length>0;){var n=0;for(var r in e){var o=e[r];"undefined"!=typeof o.distance&&o.distance>=e[n].distance&&(n=r)}i.push(e.splice(n,1)[0])}return"asc"==a&&i.reverse(),i}},{key:"_getDistanceList",value:function(e,a){e=t._getValidPoint(e),a=t._getValidPointList(a);var i=[];for(var n in a)try{var r=t.getDistanceBetween(e,a[n]);i.push({from:e,to:a[n],distance:r})}catch(o){console.error(o)}return i}},{key:"_getValidPointList",value:function(e){try{if(!(e instanceof Array))return[t._getValidPoint(e)]}catch(a){return[]}var i=[];for(var n in e)try{i.push(t._getValidPoint(e[n]))}catch(a){console.error(a)}return i}},{key:"_getValidPoint",value:function(t){if("undefined"==typeof t)throw"greatCircle: No coordinates given";if(isNaN(t.lat)||isNaN(t.lon))throw"greatCircle: Invalid coordinates";if(parseFloat(t.lat)<-180||parseFloat(t.lat)>180)throw"greatCircle: Invalid coordinates";if(parseFloat(t.lon)<-180||parseFloat(t.lon)>180)throw"greatCircle: Invalid coordinates";var e={lat:parseFloat(t.lat),lon:parseFloat(t.lon)};return"undefined"!=typeof t.payload&&(e.payload=t.payload),e}},{key:"_getValidSort",value:function(t){return t&&"asc"==t?"asc":t&&"desc"==t?"desc":!1}},{key:"_getValidLimit",value:function(t){return"boolean"==typeof t?!1:null===t?!1:isNaN(t)?!1:parseInt(t)>0?parseInt(t):!1}},{key:"floatToRadians",value:function(t){return t*Math.PI/180}},{key:"earthRadius",value:6371e3,enumerable:!0}]),t}();
